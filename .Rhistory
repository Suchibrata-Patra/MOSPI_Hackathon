) +
theme_minimal()
## Load required libraries
library(tidyverse)
library(ggplot2)
# Load the CPI dataset
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")  # Replace with your dataset path
# Filter for All India CPI data
cpi_basket <- data %>%
filter(State == "ALL India") %>%
group_by(Year, Description) %>%
summarise(Avg_Combined = mean(Combined, na.rm = TRUE)) %>%
spread(key = Description, value = Avg_Combined)
# Define the household basket weights (in % of total expenses)
weights <- tibble(
Category = c("Food and beverages", "Housing", "Fuel and light",
"Clothing and footwear", "Miscellaneous"),
Weight = c(40, 25, 15, 10, 10)  # Typical distribution
)
# Check which columns match the categories and rename them accordingly
colnames(cpi_basket) <- c("Year", "Clothing and footwear", "Food and beverages",
"Fuel and light", "Housing", "Miscellaneous")
# Load required libraries
library(tidyverse)
library(ggplot2)
# Load the CPI dataset
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")  # Replace with your dataset path
# Filter for All India CPI data
cpi_basket <- data %>%
filter(State == "ALL India") %>%
group_by(Year, Description) %>%
summarise(Avg_Combined = mean(Combined, na.rm = TRUE)) %>%
spread(key = Description, value = Avg_Combined)
# Define the household basket weights (in % of total expenses)
weights <- tibble(
Category = c("Food and beverages", "Housing", "Fuel and light",
"Clothing and footwear", "Miscellaneous"),
Weight = c(40, 25, 15, 10, 10)  # Typical distribution
)
# Check which columns match the categories and rename them accordingly
colnames(cpi_basket) <- c("Year", "Clothing and footwear", "Food and beverages",
"Fuel and light", "Housing", "Miscellaneous")
# Load required libraries
library(tidyverse)
library(ggplot2)
# Load the CPI dataset
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")  # Replace with your dataset path
# Filter for All India CPI data
cpi_basket <- data %>%
filter(State == "ALL India") %>%
group_by(Year, Description) %>%
summarise(Avg_Combined = mean(Combined, na.rm = TRUE)) %>%
spread(key = Description, value = Avg_Combined)
# Define the household basket weights (in % of total expenses)
weights <- tibble(
Category = c("Food and beverages", "Housing", "Fuel and light",
"Clothing and footwear", "Miscellaneous"),
Weight = c(40, 25, 15, 10, 10)  # Typical distribution
)
# Check which columns match the categories and rename them accordingly
colnames(cpi_basket) <- c("Year", "Clothing and footwear", "Food and beverages",
"Fuel and light", "Housing", "Miscellaneous")
colnames(cpi_basket)
# Load required libraries
library(tidyverse)
library(ggplot2)
# Load the CPI dataset
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")  # Replace with your dataset path
# Filter for All India CPI data
cpi_basket <- data %>%
filter(State == "ALL India") %>%
group_by(Year, Description) %>%
summarise(Avg_Combined = mean(Combined, na.rm = TRUE), .groups = "drop") %>%
spread(key = Description, value = Avg_Combined)
# Ensure missing columns are created with NA values
required_cols <- c("Year", "Food and beverages", "Housing", "Fuel and light",
"Clothing and footwear", "Miscellaneous")
# Add missing columns with NA values
for (col in required_cols) {
if (!col %in% colnames(cpi_basket)) {
cpi_basket[[col]] <- NA
}
}
# Reorder columns properly
cpi_basket <- cpi_basket %>%
select(all_of(required_cols))
# Calculate the household basket cost
basket_cost <- cpi_basket %>%
mutate(
Basket_Cost = (`Food and beverages` * 0.40) +
(`Housing` * 0.25) +
(`Fuel and light` * 0.15) +
(`Clothing and footwear` * 0.10) +
(`Miscellaneous` * 0.10)
)
# Plot the rising household basket cost over time
ggplot(basket_cost, aes(x = Year, y = Basket_Cost)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "red", size = 2) +
labs(
title = "Inflation Impact on Common Household Basket Cost",
x = "Year",
y = "Basket Cost (CPI-based)",
subtitle = "Rising cost of a common household's monthly expenses over time"
) +
theme_minimal()
# Load required libraries
library(tidyverse)
library(ggplot2)
# Load the CPI dataset
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")  # Replace with your dataset path
# Filter for All India CPI data
cpi_basket <- data %>%
filter(State == "ALL India") %>%
group_by(Year, Description) %>%
summarise(Avg_Combined = mean(Combined, na.rm = TRUE), .groups = "drop") %>%
spread(key = Description, value = Avg_Combined)
# Use only available category for basket cost
basket_cost <- cpi_basket %>%
mutate(Basket_Cost = `Food and beverages` * 1)  # 100% weight since no other categories
# Plotting the trend
ggplot(basket_cost, aes(x = Year, y = Basket_Cost)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "red", size = 2) +
labs(
title = "Inflation Impact on Food & Beverages (Household Basket)",
x = "Year",
y = "Basket Cost (CPI-based)",
subtitle = "Trend of food & beverages cost over time due to inflation"
) +
theme_minimal()
# Time-Series Visualization with Moving Average
library(zoo)
install.packages('zoo')
# Time-Series Visualization with Moving Average
library(zoo)
data$Date <- as.Date(paste(data$Year, data$Month, "01", sep = "-"))
# T-test: Rural vs Urban Inflation
t.test(data$Rural, data$Urban, paired = FALSE, na.action = na.omit)
# ANOVA: CPI across multiple states
anova_model <- aov(Combined ~ State, data = data)
summary(anova_model)
# Time-Series Visualization with Moving Average
library(zoo)
data$Date <- as.Date(paste(data$Year, data$Month, "01", sep = "-"))
# Correlation Matrix
correlation_matrix <- cor(data %>% select(Rural, Urban, Combined), use = "complete.obs")
# Plotting the Correlation Matrix
library(corrplot)
corrplot(correlation_matrix, method = "color", type = "upper", tl.col = "black")
# Simple Linear Regression: Fuel Prices vs Inflation
lm_model <- lm(Combined ~ Fuel, data = data)
# Calculate sector contribution
weights <- c(Food = 40, Housing = 25, Fuel = 15, Misc = 20)  # Weights in percentage
# Calculate weighted inflation
data$Weighted_Inflation <- (
(data$Food * weights["Food"]) +
(data$Housing * weights["Housing"]) +
(data$Fuel * weights["Fuel"]) +
(data$Misc * weights["Misc"])
) / 100
# Time series decomposition
ts_data <- ts(data$Combined, start = c(2013, 1), frequency = 12)
decomp <- stl(ts_data, s.window = "periodic")
# Plotting the decomposition
plot(decomp)
# Autocorrelation Function (ACF)
acf(ts_data, main = "ACF of CPI Inflation")
# Calculate Real Value of ₹100 over time
data$Inflation_Rate <- data$Combined / 100
data$Real_Value <- 100 / (1 + data$Inflation_Rate)^(2025 - data$Year)
# Plotting Real Value Over Time
ggplot(data, aes(x = Year, y = Real_Value)) +
geom_line(color = "red") +
labs(title = "Declining Purchasing Power of ₹100", x = "Year", y = "Real Value") +
theme_minimal()
# ✅ Load required libraries
library(tidyverse)
library(ggplot2)
library(dplyr)
library(lubridate)
# ✅ Load the dataset (replace with your file path)
data <- read.csv("CPIndex_Jan13-To-Jan25.csv")
# ✅ Convert Year and Month to Date format
data <- data %>%
mutate(Date = as.Date(paste(Year, Month, "01", sep = "-")))
# ✅ Load Required Libraries
library(tidyverse)
library(sf)
install.packages('sf')
# ✅ Load Required Libraries
library(tidyverse)
library(sf)
# ✅ Load Required Libraries
library(tidyverse)
library(sf)
# ✅ Load Required Libraries
library(tidyverse)
library(sf)
rm(list=ls())
data = read.csv("CPIndex_Jan13-To-Jan25.csv")
data = read.csv("general_index.csv")
# Load necessary libraries
library(tidyverse)
rm(list=ls())
data = read.csv("general_index.csv")
str(data)
data = read.csv("general_index.csv")
# Remove the unwanted column by name
data <- data[, !grepl("Base 2012=100", colnames(data))]
# Check the result
head(data)
str(data)
# Remove the unwanted column by name
data <- data[data$Description != "Base 2012=100", ]
rm(list=ls())
data = read.csv("general_index.csv")
# Remove the unwanted column by name
data <- data[data$Description != "Base 2012=100", ]
data = read.csv("general_index.csv")
# Remove the unwanted column by name
data <- data[data$Description != "Base 2012=100", ]
str(data)
rm(list=ls())
data = read.csv("general_index.csv")
rm(list=ls())
rm(list=ls())
data = read.csv("general_index.csv")
str(data)
data = read.csv("general_index.csv",na.omit=TRUE)
rm(list=ls())
data = read.csv("general_index.csv")
data = data[, colSums(is.na(data)) < nrow(data)]
data = data[, !apply(data, 2, function(x) all(is.na(x) | x == ""))]
# Check the result
head(data)
rm(list=ls())
# Load necessary libraries
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
data = read.csv("general_index.csv")
data = data[, colSums(is.na(data)) < nrow(data)]
data = data[, !apply(data, 2, function(x) all(is.na(x) | x == ""))]
str(data)
# Convert Year and Month into a Date format
data$Date = make_date(data$Year, match(data$Month, month.name), 1)
# Convert CPI values to numeric (if not already)
data$Rural = as.numeric(data$Rural)
data$Urban = as.numeric(data$Urban)
data$Combined = as.numeric(data$Combined)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1) +
labs(title = "All India CPI Inflation Trends (2013-2025)", x = "Year", y = "CPI Index") +
theme_minimal()
library(ggplot2)
library(dplyr)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
legend.title = element_text(size = 14, face = "bold"), # Legend title styling
legend.text = element_text(size = 12), # Legend text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20) # Adjust plot margins for spacing
) +
guides(color = guide_legend(title = "Description", title.position = "top")) # Legend placement
library(ggplot2)
library(dplyr)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "none" # Remove legend
)
library(ggplot2)
library(dplyr)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
legend.title = element_text(size = 14, face = "bold"), # Legend title styling
legend.text = element_text(size = 12), # Legend text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20) # Adjust plot margins for spacing
) +
guides(color = guide_legend(title = "Description", title.position = "top")) # Legend placement
library(ggplot2)
library(dplyr)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "none" # Remove legend
)
library(ggplot2)
library(dplyr)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "top", # Move the legend to the top
legend.title = element_blank(), # Remove the legend title
legend.text = element_text(size = 10), # Make the legend text smaller
legend.key = element_blank() # Remove the legend background
) +
geom_vline(aes(xintercept = as.numeric(Date)), linetype = "dashed", color = "gray", size = 0.5) # Vertical dashed lines
library(ggplot2)
library(dplyr)
# Create a data frame for years where vertical lines should be placed
years <- data %>%
filter(State == "ALL India") %>%
distinct(Date) %>%
mutate(Year = as.numeric(format(Date, "%Y"))) # Extract the year as a numeric value
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "top", # Move the legend to the top
legend.title = element_blank(), # Remove the legend title
legend.text = element_text(size = 10), # Make the legend text smaller
legend.key = element_blank() # Remove the legend background
) +
# Add vertical dashed lines at the years
geom_vline(data = years, aes(xintercept = as.numeric(Date)), linetype = "dashed", color = "gray", size = 0.5) +
guides(color = guide_legend(nrow = 1, byrow = TRUE)) # Keep the legend neat
str(data)
unique(Year)
unique(data$Year)
library(ggplot2)
library(dplyr)
# List the years where you want to draw vertical lines
highlight_years <- c(2013, 2015, 2017, 2019, 2021, 2023)  # specify the years here
# Filter the data for these specific years
highlight_data <- data %>%
filter(Year %in% highlight_years)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "top", # Move the legend to the top
legend.title = element_blank(), # Remove the legend title
legend.text = element_text(size = 10), # Make the legend text smaller
legend.key = element_blank() # Remove the legend background
) +
# Add vertical dashed lines for specific years
geom_vline(data = highlight_data, aes(xintercept = as.numeric(Date)), linetype = "dashed", color = "gray", size = 0.5) +
guides(color = guide_legend(nrow = 1, byrow = TRUE)) # Keep the legend neat
library(ggplot2)
library(dplyr)
# List the years where you want to draw vertical lines
highlight_years <- c(2013, 2015, 2017, 2019, 2021, 2023)  # specify the years here
# Filter the data for these specific years
highlight_data <- data %>%
filter(Year %in% highlight_years)
# All India CPI Inflation Trends Over the Years
ggplot(data %>% filter(State == "ALL India"), aes(x = Year, y = Combined, color = Description)) +
geom_line(size = 1.2, alpha = 0.8) +
labs(
title = "All India CPI Inflation Trends (2013-2025)",
subtitle = "Tracking the Consumer Price Index (CPI) across the years",
x = "Year",
y = "CPI Index"
) +
scale_color_manual(values = c("steelblue", "darkorange", "forestgreen", "firebrick")) + # Custom colors
theme_minimal(base_size = 14) + # Minimal theme with custom font size
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5), # Title styling
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray"), # Subtitle styling
axis.title = element_text(size = 14, face = "bold"), # Axis title styling
axis.text = element_text(size = 12), # Axis text styling
panel.grid.major = element_line(color = "gray", linetype = "dotted"), # Major grid lines
panel.grid.minor = element_blank(), # Remove minor grid lines
plot.margin = margin(20, 20, 20, 20), # Adjust plot margins for spacing
legend.position = "top", # Move the legend to the top
legend.title = element_blank(), # Remove the legend title
legend.text = element_text(size = 10), # Make the legend text smaller
legend.key = element_blank() # Remove the legend background
) +
# Add vertical dashed lines for specific years
geom_vline(data = highlight_data, aes(xintercept = Year), linetype = "dashed", color = "gray", size = 0.5) +
scale_x_continuous(breaks = highlight_years) + # Set breaks to display only the years of interest
guides(color = guide_legend(nrow = 1, byrow = TRUE)) # Keep the legend neat
unique(data$Year)
library(ggplot2)
library(dplyr)
# Assuming 'data' is already available
ggplot(data %>% filter(State == "ALL India"), aes(x = Date, y = Combined, color = Description)) +
geom_line(size = 1.2) +  # Increase line width for a cleaner look
scale_color_manual(values = c("blue", "red", "green")) +  # Customize color palette
labs(
title = "All India CPI Inflation Trends (2013-2025)",
x = "Year",
y = "CPI Index",
subtitle = "Inflation trends for All India across years"
) +
theme_minimal(base_size = 14) +  # Larger text for readability
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better clarity
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
legend.position = "bottom"
) +
scale_x_continuous(breaks = seq(2013, 2025, by = 1)) +  # X-axis with specific breaks
theme(panel.grid.major.x = element_line(color = "gray", size = 0.5),  # Gray vertical lines
panel.grid.minor.x = element_blank(),  # Remove minor vertical lines
panel.grid.major.y = element_line(color = "lightgray", linetype = "dashed")) +  # Dashed horizontal grid lines
geom_vline(xintercept = seq(2013, 2025, by = 1), color = "gray", linetype = "solid", size = 0.7)  # Vertical grid lines
